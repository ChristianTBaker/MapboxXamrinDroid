com/mapbox/android/core/BuildConfig = Com.Mapbox.Android.Core.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/mapbox/android/core/connectivity/ConnectivityReceiver = Com.Mapbox.Android.Core.Connectivity.ConnectivityReceiver
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getConnectedFlag()Ljava/lang/Boolean; = ConnectedFlag
  setConnectedFlag(Ljava/lang/Boolean;)V = ConnectedFlag
  isConnected()Z = IsConnected
  isConnected(Landroid/content/Context;)Z = InvokeIsConnected(Android.Content.Context)
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  removeConnectivityUpdates()V = RemoveConnectivityUpdates()
  requestConnectivityUpdates()V = RequestConnectivityUpdates()
com/mapbox/android/core/crashreporter/CrashReport = Com.Mapbox.Android.Core.Crashreporter.CrashReport
  getDateString()Ljava/lang/String; = DateString
  put(Ljava/lang/String;Ljava/lang/String;)V = Put(string, string)
  toJson()Ljava/lang/String; = ToJson()
com/mapbox/android/core/crashreporter/CrashReportBuilder = Com.Mapbox.Android.Core.Crashreporter.CrashReportBuilder
  fromJson(Ljava/lang/String;)Lcom/mapbox/android/core/crashreporter/CrashReport; = FromJson(string)
com/mapbox/android/core/crashreporter/MapboxUncaughtExceptionHanlder = Com.Mapbox.Android.Core.Crashreporter.MapboxUncaughtExceptionHanlder
  MAPBOX_CRASH_REPORTER_PREFERENCES = MapboxCrashReporterPreferences
  MAPBOX_PREF_ENABLE_CRASH_REPORTER = MapboxPrefEnableCrashReporter
  install(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = Install(Android.Content.Context, string, string)
  onSharedPreferenceChanged(Landroid/content/SharedPreferences;Ljava/lang/String;)V = OnSharedPreferenceChanged(Android.Content.ISharedPreferences, string)
  uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V = UncaughtException(Java.Lang.Thread, Java.Lang.Throwable)
com/mapbox/android/core/FileUtils = Com.Mapbox.Android.Core.FileUtils
  deleteFile(Ljava/io/File;)V = DeleteFile(Java.IO.File)
  deleteFirst([Ljava/io/File;Ljava/util/Comparator;I)V = DeleteFirst(Java.IO.File[], Java.Util.IComparator, int)
  getFile(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File; = GetFile(Android.Content.Context, string)
  listAllFiles(Ljava/io/File;)[Ljava/io/File; = ListAllFiles(Java.IO.File)
  readFromFile(Ljava/io/File;)Ljava/lang/String; = ReadFromFile(Java.IO.File)
  writeToFile(Ljava/io/File;Ljava/lang/String;)V = WriteToFile(Java.IO.File, string)
com/mapbox/android/core/location/LocationEngine = Com.Mapbox.Android.Core.Location.ILocationEngine
  getLastLocation(Lcom/mapbox/android/core/location/LocationEngineCallback;)V = GetLastLocation(Com.Mapbox.Android.Core.Location.ILocationEngineCallback)
  removeLocationUpdates(Landroid/app/PendingIntent;)V = RemoveLocationUpdates(Android.App.PendingIntent)
  removeLocationUpdates(Lcom/mapbox/android/core/location/LocationEngineCallback;)V = RemoveLocationUpdates(Com.Mapbox.Android.Core.Location.ILocationEngineCallback)
  requestLocationUpdates(Lcom/mapbox/android/core/location/LocationEngineRequest;Landroid/app/PendingIntent;)V = RequestLocationUpdates(Com.Mapbox.Android.Core.Location.LocationEngineRequest, Android.App.PendingIntent)
  requestLocationUpdates(Lcom/mapbox/android/core/location/LocationEngineRequest;Lcom/mapbox/android/core/location/LocationEngineCallback;Landroid/os/Looper;)V = RequestLocationUpdates(Com.Mapbox.Android.Core.Location.LocationEngineRequest, Com.Mapbox.Android.Core.Location.ILocationEngineCallback, Android.OS.Looper)
com/mapbox/android/core/location/LocationEngineCallback = Com.Mapbox.Android.Core.Location.ILocationEngineCallback
  onFailure(Ljava/lang/Exception;)V = OnFailure(Java.Lang.Exception)
  onSuccess(Ljava/lang/Object;)V = OnSuccess(Java.Lang.Object)
com/mapbox/android/core/location/LocationEngineProvider = Com.Mapbox.Android.Core.Location.LocationEngineProvider
  getBestLocationEngine(Landroid/content/Context;)Lcom/mapbox/android/core/location/LocationEngine; = GetBestLocationEngine(Android.Content.Context)
  getBestLocationEngine(Landroid/content/Context;Z)Lcom/mapbox/android/core/location/LocationEngine; = GetBestLocationEngine(Android.Content.Context, bool)
com/mapbox/android/core/location/LocationEngineRequest = Com.Mapbox.Android.Core.Location.LocationEngineRequest
  PRIORITY_BALANCED_POWER_ACCURACY = PriorityBalancedPowerAccuracy
  PRIORITY_HIGH_ACCURACY = PriorityHighAccuracy
  PRIORITY_LOW_POWER = PriorityLowPower
  PRIORITY_NO_POWER = PriorityNoPower
  getDisplacemnt()F = Displacemnt
  getFastestInterval()J = FastestInterval
  getInterval()J = Interval
  getMaxWaitTime()J = MaxWaitTime
  getPriority()I = Priority
com/mapbox/android/core/location/LocationEngineResult = Com.Mapbox.Android.Core.Location.LocationEngineResult
  getLastLocation()Landroid/location/Location; = LastLocation
  getLocations()Ljava/util/List; = Locations
  create(Landroid/location/Location;)Lcom/mapbox/android/core/location/LocationEngineResult; = Create(Android.Locations.Location)
  create(Ljava/util/List;)Lcom/mapbox/android/core/location/LocationEngineResult; = Create(System.Collections.Generic.IList<Android.Locations.Location>)
  extractResult(Landroid/content/Intent;)Lcom/mapbox/android/core/location/LocationEngineResult; = ExtractResult(Android.Content.Intent)
com/mapbox/android/core/permissions/PermissionsListener = Com.Mapbox.Android.Core.Permissions.IPermissionsListener
  onExplanationNeeded(Ljava/util/List;)V = OnExplanationNeeded(System.Collections.Generic.IList<string>)
  onPermissionResult(Z)V = OnPermissionResult(bool)
com/mapbox/android/core/permissions/PermissionsManager = Com.Mapbox.Android.Core.Permissions.PermissionsManager
  <init>(Lcom/mapbox/android/core/permissions/PermissionsListener;)V = .ctor(Com.Mapbox.Android.Core.Permissions.IPermissionsListener)
  getListener()Lcom/mapbox/android/core/permissions/PermissionsListener; = Listener
  setListener(Lcom/mapbox/android/core/permissions/PermissionsListener;)V = Listener
  areLocationPermissionsGranted(Landroid/content/Context;)Z = AreLocationPermissionsGranted(Android.Content.Context)
  areRuntimePermissionsRequired()Z = AreRuntimePermissionsRequired()
  onRequestPermissionsResult(I[Ljava/lang/String;[I)V = OnRequestPermissionsResult(int, string[], int[])
  requestLocationPermissions(Landroid/app/Activity;)V = RequestLocationPermissions(Android.App.Activity)
