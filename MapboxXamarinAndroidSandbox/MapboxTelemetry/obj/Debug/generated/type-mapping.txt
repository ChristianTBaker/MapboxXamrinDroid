com/mapbox/android/telemetry/AppUserTurnstile = Com.Mapbox.Android.Telemetry.AppUserTurnstile
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  CREATOR = Creator
  getSkuId()Ljava/lang/String; = SkuId
  setSkuId(Ljava/lang/String;)V = SkuId
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/mapbox/android/telemetry/Attachment = Com.Mapbox.Android.Telemetry.Attachment
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getAttachments()Ljava/util/List; = Attachments
  addAttachment(Lcom/mapbox/android/telemetry/FileAttachment;)V = AddAttachment(Com.Mapbox.Android.Telemetry.FileAttachment)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/mapbox/android/telemetry/AttachmentListener = Com.Mapbox.Android.Telemetry.IAttachmentListener
  onAttachmentFailure(Ljava/lang/String;Ljava/util/List;)V = OnAttachmentFailure(string, System.Collections.Generic.IList<string>)
  onAttachmentResponse(Ljava/lang/String;ILjava/util/List;)V = OnAttachmentResponse(string, int, System.Collections.Generic.IList<string>)
com/mapbox/android/telemetry/AttachmentMetadata = Com.Mapbox.Android.Telemetry.AttachmentMetadata
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string)
  getCreated()Ljava/lang/String; = Created
  getEndTime()Ljava/lang/String; = EndTime
  setEndTime(Ljava/lang/String;)V = EndTime
  getFileId()Ljava/lang/String; = FileId
  getFormat()Ljava/lang/String; = Format
  getName()Ljava/lang/String; = Name
  getSessionId()Ljava/lang/String; = SessionId
  getSize()Ljava/lang/Integer; = Size
  getStartTime()Ljava/lang/String; = StartTime
  setStartTime(Ljava/lang/String;)V = StartTime
  getType()Ljava/lang/String; = Type
  setSize(I)V = SetSize(int)
com/mapbox/android/telemetry/BuildConfig = Com.Mapbox.Android.Telemetry.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/mapbox/android/telemetry/crash/TokenChangeBroadcastReceiver = Com.Mapbox.Android.Telemetry.Crash.TokenChangeBroadcastReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  register(Landroid/content/Context;)V = Register(Android.Content.Context)
com/mapbox/android/telemetry/CrashEvent = Com.Mapbox.Android.Telemetry.CrashEvent
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getHash()Ljava/lang/String; = Hash
  isValid()Z = IsValid
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/mapbox/android/telemetry/Event = Com.Mapbox.Android.Telemetry.Event
  <init>()V = .ctor()
com/mapbox/android/telemetry/FileAttachment = Com.Mapbox.Android.Telemetry.FileAttachment
  getAttachmentMetadata()Lcom/mapbox/android/telemetry/AttachmentMetadata; = AttachmentMetadata
  getFileData()Ljava/lang/Object; = FileData
com/mapbox/android/telemetry/FullQueueCallback = Com.Mapbox.Android.Telemetry.IFullQueueCallback
  onFullQueue(Ljava/util/List;)V = OnFullQueue(System.Collections.Generic.IList<Com.Mapbox.Android.Telemetry.Event>)
com/mapbox/android/telemetry/location/LocationCollectionClient = Com.Mapbox.Android.Telemetry.Location.LocationCollectionClient
  DEFAULT_SESSION_ROTATION_INTERVAL_HOURS = DefaultSessionRotationIntervalHours
  install(Landroid/content/Context;J)Lcom/mapbox/android/telemetry/location/LocationCollectionClient; = Install(Android.Content.Context, long)
  onSharedPreferenceChanged(Landroid/content/SharedPreferences;Ljava/lang/String;)V = OnSharedPreferenceChanged(Android.Content.ISharedPreferences, string)
com/mapbox/android/telemetry/location/LocationMapper = Com.Mapbox.Android.Telemetry.Location.LocationMapper
  <init>()V = .ctor()
  create(Landroid/location/Location;Ljava/lang/String;)Lcom/mapbox/android/telemetry/LocationEvent; = Create(Android.Locations.Location, string)
  from(Landroid/location/Location;Ljava/lang/String;)Lcom/mapbox/android/telemetry/LocationEvent; = From(Android.Locations.Location, string)
  updateSessionIdentifier(Lcom/mapbox/android/telemetry/location/SessionIdentifier;)V = UpdateSessionIdentifier(Com.Mapbox.Android.Telemetry.Location.SessionIdentifier)
com/mapbox/android/telemetry/location/LocationUpdatesBroadcastReceiver = Com.Mapbox.Android.Telemetry.Location.LocationUpdatesBroadcastReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/mapbox/android/telemetry/location/SessionIdentifier = Com.Mapbox.Android.Telemetry.Location.SessionIdentifier
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  getInterval()J = Interval
com/mapbox/android/telemetry/LocationEvent = Com.Mapbox.Android.Telemetry.LocationEvent
  <init>(Ljava/lang/String;DDLjava/lang/String;)V = .ctor(string, double, double, string)
  CREATOR = Creator
  describeContents()I = DescribeContents()
  setAccuracy(Ljava/lang/Float;)V = SetAccuracy(Java.Lang.Float)
  setAltitude(Ljava/lang/Double;)V = SetAltitude(Java.Lang.Double)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/mapbox/android/telemetry/MapboxTelemetry = Com.Mapbox.Android.Telemetry.MapboxTelemetry
  <init>(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Android.Content.Context, string, string)
  addAttachmentListener(Lcom/mapbox/android/telemetry/AttachmentListener;)Z = AddAttachmentListener(Com.Mapbox.Android.Telemetry.IAttachmentListener)
  addTelemetryListener(Lcom/mapbox/android/telemetry/TelemetryListener;)Z = AddTelemetryListener(Com.Mapbox.Android.Telemetry.ITelemetryListener)
  disable()Z = Disable()
  enable()Z = Enable()
  onFullQueue(Ljava/util/List;)V = OnFullQueue(System.Collections.Generic.IList<Com.Mapbox.Android.Telemetry.Event>)
  onTaskRemoved()V = OnTaskRemoved()
  push(Lcom/mapbox/android/telemetry/Event;)Z = Push(Com.Mapbox.Android.Telemetry.Event)
  removeAttachmentListener(Lcom/mapbox/android/telemetry/AttachmentListener;)Z = RemoveAttachmentListener(Com.Mapbox.Android.Telemetry.IAttachmentListener)
  removeTelemetryListener(Lcom/mapbox/android/telemetry/TelemetryListener;)Z = RemoveTelemetryListener(Com.Mapbox.Android.Telemetry.ITelemetryListener)
  updateAccessToken(Ljava/lang/String;)Z = UpdateAccessToken(string)
  updateDebugLoggingEnabled(Z)V = UpdateDebugLoggingEnabled(bool)
  updateSessionIdRotationInterval(Lcom/mapbox/android/telemetry/SessionInterval;)Z = UpdateSessionIdRotationInterval(Com.Mapbox.Android.Telemetry.SessionInterval)
  updateUserAgent(Ljava/lang/String;)V = UpdateUserAgent(string)
com/mapbox/android/telemetry/MapboxTelemetryConstants = Com.Mapbox.Android.Telemetry.MapboxTelemetryConstants
  ACTION_TOKEN_CHANGED = ActionTokenChanged
  LOCATION_COLLECTOR_ENABLED = LocationCollectorEnabled
  MAPBOX_SHARED_PREFERENCES = MapboxSharedPreferences
  MAPBOX_TELEMETRY_PACKAGE = MapboxTelemetryPackage
  SESSION_ROTATION_INTERVAL_MILLIS = SessionRotationIntervalMillis
com/mapbox/android/telemetry/provider/MapboxTelemetryInitProvider = Com.Mapbox.Android.Telemetry.Provider.MapboxTelemetryInitProvider
  <init>()V = .ctor()
  delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I = Delete(Android.Net.Uri, string, string[])
  getType(Landroid/net/Uri;)Ljava/lang/String; = GetType(Android.Net.Uri)
  insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri; = Insert(Android.Net.Uri, Android.Content.ContentValues)
  onCreate()Z = OnCreate()
  query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(Android.Net.Uri, string[], string, string[], string)
  update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I = Update(Android.Net.Uri, Android.Content.ContentValues, string, string[])
com/mapbox/android/telemetry/ServiceTaskCallback = Com.Mapbox.Android.Telemetry.IServiceTaskCallback
  onTaskRemoved()V = OnTaskRemoved()
com/mapbox/android/telemetry/SessionInterval = Com.Mapbox.Android.Telemetry.SessionInterval
  <init>(I)V = .ctor(int)
com/mapbox/android/telemetry/TelemetryEnabler = Com.Mapbox.Android.Telemetry.TelemetryEnabler
  retrieveTelemetryStateFromPreferences()Lcom/mapbox/android/telemetry/TelemetryEnabler$State; = RetrieveTelemetryStateFromPreferences()
  updateTelemetryState(Lcom/mapbox/android/telemetry/TelemetryEnabler$State;)Lcom/mapbox/android/telemetry/TelemetryEnabler$State; = UpdateTelemetryState(Com.Mapbox.Android.Telemetry.TelemetryEnabler.State)
com/mapbox/android/telemetry/TelemetryListener = Com.Mapbox.Android.Telemetry.ITelemetryListener
  onHttpFailure(Ljava/lang/String;)V = OnHttpFailure(string)
  onHttpResponse(ZI)V = OnHttpResponse(bool, int)
com/mapbox/android/telemetry/TelemetryUtils = Com.Mapbox.Android.Telemetry.TelemetryUtils
  <init>()V = .ctor()
  generateCreateDateFormatted(Ljava/util/Date;)Ljava/lang/String; = GenerateCreateDateFormatted(Java.Util.Date)
  isPluggedIn(Landroid/content/Context;)Z = IsPluggedIn(Android.Content.Context)
  obtainApplicationState(Landroid/content/Context;)Ljava/lang/String; = ObtainApplicationState(Android.Content.Context)
  obtainBatteryLevel(Landroid/content/Context;)I = ObtainBatteryLevel(Android.Content.Context)
  obtainCellularNetworkType(Landroid/content/Context;)Ljava/lang/String; = ObtainCellularNetworkType(Android.Content.Context)
  obtainCurrentDate()Ljava/lang/String; = ObtainCurrentDate()
  obtainUniversalUniqueIdentifier()Ljava/lang/String; = ObtainUniversalUniqueIdentifier()
  retrieveVendorId()Ljava/lang/String; = RetrieveVendorId()
  toHumanReadableAscii(Ljava/lang/String;)Ljava/lang/String; = ToHumanReadableAscii(string)
com/mapbox/android/telemetry/VisionBuildEvent = Com.Mapbox.Android.Telemetry.IVisionBuildEvent
  build()Lcom/mapbox/android/telemetry/Event; = Build()
com/mapbox/android/telemetry/VisionEvent = Com.Mapbox.Android.Telemetry.VisionEvent
  CREATOR = Creator
  getContents()Ljava/util/HashMap; = Contents
  setContents(Ljava/util/HashMap;)V = Contents
  describeContents()I = DescribeContents()
  setName(Ljava/lang/String;)V = SetName(string)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/mapbox/android/telemetry/VisionEventFactory = Com.Mapbox.Android.Telemetry.VisionEventFactory
  <init>()V = .ctor()
  createAttachment(Lcom/mapbox/android/telemetry/Event$Type;)Lcom/mapbox/android/telemetry/Attachment; = CreateAttachment(Com.Mapbox.Android.Telemetry.Event.Type)
  createVisionEvent(Lcom/mapbox/android/telemetry/Event$Type;)Lcom/mapbox/android/telemetry/Event; = CreateVisionEvent(Com.Mapbox.Android.Telemetry.Event.Type)
com/mapbox/android/telemetry/VisionObjectDetectionEvent = Com.Mapbox.Android.Telemetry.VisionObjectDetectionEvent
  <init>(Ljava/lang/String;)V = .ctor(string)
  CREATOR = Creator
  getClazz()Ljava/lang/String; = Clazz
  setClazz(Ljava/lang/String;)V = Clazz
  getCreated()Ljava/lang/String; = Created
  getDistanceFromCamera()D = DistanceFromCamera
  setDistanceFromCamera(D)V = DistanceFromCamera
  getEvent()Ljava/lang/String; = Event
  getObjectLatitude()D = ObjectLatitude
  setObjectLatitude(D)V = ObjectLatitude
  getObjectLongitude()D = ObjectLongitude
  setObjectLongitude(D)V = ObjectLongitude
  getObjectPositionHeight()D = ObjectPositionHeight
  setObjectPositionHeight(D)V = ObjectPositionHeight
  getObjectSizeHeight()D = ObjectSizeHeight
  setObjectSizeHeight(D)V = ObjectSizeHeight
  getObjectSizeWidth()D = ObjectSizeWidth
  setObjectSizeWidth(D)V = ObjectSizeWidth
  getSignValue()Ljava/lang/String; = SignValue
  setSignValue(Ljava/lang/String;)V = SignValue
  getVehicleLatitude()D = VehicleLatitude
  setVehicleLatitude(D)V = VehicleLatitude
  getVehicleLongitude()D = VehicleLongitude
  setVehicleLongitude(D)V = VehicleLongitude
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
